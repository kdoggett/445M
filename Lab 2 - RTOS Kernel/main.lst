


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Provide a brief introduction to the floating point uni
                       t
    4 00000000         ; Jonathan Valvano
    5 00000000         ; September 11, 2013
    6 00000000         
    7 00000000         ;  This example accompanies the book
    8 00000000         ;   "Embedded Systems: Introduction to ARM Cortex M Micr
                       ocontrollers"
    9 00000000         ;   ISBN: 978-1469998749, Jonathan Valvano, copyright (c
                       ) 2013
   10 00000000         ;   Example zz
   11 00000000         ;
   12 00000000         ;Copyright 2013 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   13 00000000         ;   You may use, edit, run or distribute this file
   14 00000000         ;   as long as the above copyright notice remains
   15 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   16 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   17 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   18 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   19 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   20 00000000         ;For more information about my classes, my research, and
                        my books, see
   21 00000000         ;http://users.ece.utexas.edu/~valvano/
   22 00000000                 AREA             DATA, ALIGN=2
   23 00000000 00 00 00 
              00       ten     SPACE            4
   24 00000004 00 00 00 
              00       tenth   SPACE            4
   25 00000008 00 00 00 
              00       In      SPACE            4
   26 0000000C 00 00 00 
              00       A       SPACE            4
   27 00000010 00 00 00 
              00       T       SPACE            4
   28 00000014 00 00 00 
              00       N       SPACE            4
   29 00000018         
   30 00000018 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Buffer  SPACE            80          ; results of circle
                                                             test
   31 00000068                 EXPORT           ten [DATA,SIZE=4]
   32 00000068                 EXPORT           tenth [DATA,SIZE=4]
   33 00000068                 EXPORT           Buffer [DATA,SIZE=80]
   34 00000068         
   35 00000068                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   36 00000000                 THUMB
   37 00000000                 EXPORT           Start
   38 00000000         ; FPU already initialized in this start.s
   39 00000000         Start
   40 00000000 F000 F853       BL               Test4
   41 00000004 EEB2 0A04       VLDR.F32         S0,=10.0    ;the example from t
                                                            he book
   42 00000008 4834            LDR              R0,=ten
   43 0000000A ED80 0A00       VSTR.F32         S0,[R0]
   44 0000000E         ; 10 = (0,0x82,0x200000) = (0,10000010,01000000000000000
                       000000)
   45 0000000E EDDF 0A34       VLDR.F32         S1,=0.1     ;another example fr
                                                            om the book
   46 00000012 4834            LDR              R0,=tenth
   47 00000014 EDC0 0A00       VSTR.F32         S1,[R0]
   48 00000018         ; 0.1 about (0,0x7B,0x4CCCCD) = (0,01111011,100110011001
                       10011001101)
   49 00000018         
   50 00000018 ED9F 1A33       VLDR.F32         S2,=0.0
   51 0000001C EEF6 1A00       VLDR.F32         S3,=0.5
   52 00000020         
   53 00000020 4832            LDR              R0,=In
   54 00000022 EDC0 1A00       VSTR.F32         S3,[R0]     ;In = 0.5
   55 00000026 F000 F810       BL               Test
   56 0000002A ED9F 2A31       VLDR.F32         S4,=0.785398 ;pi/4 
   57 0000002E         
   58 0000002E 4C31            LDR              R4,=Buffer
   59 00000030 F04F 0514       MOV              R5,#20
   60 00000034         
   61 00000034         loop
   62 00000034 EEB0 0A41       VMOV.F32         S0,S2       ; set input paramet
                                                            er
   63 00000038 F000 F811       BL               CircleArea
   64 0000003C ECA4 0A01       VSTR.F32         S0,[R4],#4
   65 00000040 EE31 1A21       VADD.F32         S2,S2,S3    ; next input
   66 00000044 3D01            SUBS             R5,#1
   67 00000046 D1F5            BNE              loop
   68 00000048 E7FE    done    B                done
   69 0000004A         
   70 0000004A B500    Test    PUSH             {LR}



ARM Macro Assembler    Page 3 


   71 0000004C 4827            LDR              R0,=In
   72 0000004E ED90 0A00       VLDR.F32         S0,[R0]     ;S0 is In
   73 00000052 F000 F804       BL               CircleArea
   74 00000056 4828            LDR              R0,=A
   75 00000058 ED80 0A00       VSTR.F32         S0,[R0]     ;A=pi*In*In
   76 0000005C BD00            POP              {PC}
   77 0000005E         
   78 0000005E         ; Calculate the area of a circle
   79 0000005E         ; Input: S0 is the radius of the circle
   80 0000005E         ; Output: S0 is the area of the circle
   81 0000005E         CircleArea
   82 0000005E EE20 0A00       VMUL.F32         S0,S0,S0    ; input squared
   83 00000062 EDDF 0A26       VLDR.F32         S1,=3.14159265
   84 00000066 EE20 0A20       VMUL.F32         S0,S0,S1    ; pi*r*r
   85 0000006A 4770            BX               LR
   86 0000006C         
   87 0000006C E000ED88 
                       NVIC_CPAC_R
                               equ              0xE000ED88
   88 0000006C         EnableFPU
   89 0000006C 4824            LDR              R0, =NVIC_CPAC_R
   90 0000006E 6801            LDR              R1, [R0]    ; Read CPACR
   91 00000070 F441 0170       ORR              R1, R1, #0x00F00000 ; Set bits 
                                                            20-23 to enable CP1
                                                            0 and CP11 coproces
                                                            sors
   92 00000074 6001            STR              R1, [R0]
   93 00000076 4770            BX               LR
   94 00000078         
   95 00000078         
   96 00000078         Test3
   97 00000078 F04F 0000       MOV              R0,#0
   98 0000007C 4921            LDR              R1,=N
   99 0000007E 4A22            LDR              R2,=T
  100 00000080 EDDF 0A22       VLDR.F32         S1,=0.009768
  101 00000084 EEB2 1A04       VLDR.F32         S2,=10
  102 00000088         
  103 00000088 6008    loop3   STR              R0,[R1]     ; N is volatile
  104 0000008A EE00 0A10       VMOV.F32         S0,R0
  105 0000008E EEB8 0A40       VCVT.F32.U32     S0,S0       ; S0 has N
  106 00000092 EE20 0A20       VMUL.F32         S0,S0,S1    ;N*0.09768
  107 00000096 EE30 0A01       VADD.F32         S0,S0,S2    ;10+N*0.0968
  108 0000009A ED82 0A00       VSTR.F32         S0,[R2]     ;T=10+N*0.0968
  109 0000009E F100 0001       ADD              R0,R0,#1
  110 000000A2 F5B0 5F80       CMP              R0,#4096
  111 000000A6 D1EF            BNE              loop3
  112 000000A8 4770            BX               LR
  113 000000AA         
  114 000000AA         Test4
  115 000000AA F04F 0000       MOV              R0,#0
  116 000000AE 4915            LDR              R1,=N
  117 000000B0 4A15            LDR              R2,=T
  118 000000B2 F04F 037D       MOV              R3,#125
  119 000000B6 F04F 0440       MOV              R4,#64
  120 000000BA F44F 757A       MOV              R5,#1000
  121 000000BE         
  122 000000BE 6008    loop4   STR              R0,[R1]     ; N is volatile
  123 000000C0 FB00 F603       MUL              R6,R0,R3    ; N*125
  124 000000C4 4426            ADD              R6,R6,R4    ; N*125+64



ARM Macro Assembler    Page 4 


  125 000000C6 EA4F 16D6       LSR              R6,R6,#7    ; (N*125+64)/128
  126 000000CA 442E            ADD              R6,R6,R5    ; 1000+(N*125+64)/1
                                                            28
  127 000000CC 6016            STR              R6,[R2]     ; T = 1000+(N*125+6
                                                            4)/128
  128 000000CE F100 0001       ADD              R0,R0,#1
  129 000000D2 F5B0 5F80       CMP              R0,#4096
  130 000000D6 D1F2            BNE              loop4
  131 000000D8 4770            BX               LR
  132 000000DA         
  133 000000DA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  134 000000DC                 END                          ; end of file
              00000000 
              3DCCCCCD 
              00000000 
              00000000 
              00000000 
              3F490FD8 
              00000000 
              00000000 
              40490FDB 
              E000ED88 
              00000000 
              00000000 
              3C2009F6 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\mai
n.d -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM
\Inc\Luminary --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

A 0000000C

Symbol: A
   Definitions
      At line 26 in file main.s
   Uses
      At line 74 in file main.s
Comment: A used once
Buffer 00000018

Symbol: Buffer
   Definitions
      At line 30 in file main.s
   Uses
      At line 33 in file main.s
      At line 58 in file main.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DATA unused
In 00000008

Symbol: In
   Definitions
      At line 25 in file main.s
   Uses
      At line 53 in file main.s
      At line 71 in file main.s

N 00000014

Symbol: N
   Definitions
      At line 28 in file main.s
   Uses
      At line 98 in file main.s
      At line 116 in file main.s

T 00000010

Symbol: T
   Definitions
      At line 27 in file main.s
   Uses
      At line 99 in file main.s
      At line 117 in file main.s

ten 00000000

Symbol: ten
   Definitions
      At line 23 in file main.s
   Uses
      At line 31 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 42 in file main.s

tenth 00000004

Symbol: tenth
   Definitions
      At line 24 in file main.s
   Uses
      At line 32 in file main.s
      At line 46 in file main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: .text unused
CircleArea 0000005E

Symbol: CircleArea
   Definitions
      At line 81 in file main.s
   Uses
      At line 63 in file main.s
      At line 73 in file main.s

EnableFPU 0000006C

Symbol: EnableFPU
   Definitions
      At line 88 in file main.s
   Uses
      None
Comment: EnableFPU unused
Start 00000000

Symbol: Start
   Definitions
      At line 39 in file main.s
   Uses
      At line 37 in file main.s
Comment: Start used once
Test 0000004A

Symbol: Test
   Definitions
      At line 70 in file main.s
   Uses
      At line 55 in file main.s
Comment: Test used once
Test3 00000078

Symbol: Test3
   Definitions
      At line 96 in file main.s
   Uses
      None
Comment: Test3 unused
Test4 000000AA

Symbol: Test4
   Definitions
      At line 114 in file main.s
   Uses
      At line 40 in file main.s
Comment: Test4 used once
done 00000048




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: done
   Definitions
      At line 68 in file main.s
   Uses
      At line 68 in file main.s
Comment: done used once
loop 00000034

Symbol: loop
   Definitions
      At line 61 in file main.s
   Uses
      At line 67 in file main.s
Comment: loop used once
loop3 00000088

Symbol: loop3
   Definitions
      At line 103 in file main.s
   Uses
      At line 111 in file main.s
Comment: loop3 used once
loop4 000000BE

Symbol: loop4
   Definitions
      At line 122 in file main.s
   Uses
      At line 130 in file main.s
Comment: loop4 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_CPAC_R E000ED88

Symbol: NVIC_CPAC_R
   Definitions
      At line 87 in file main.s
   Uses
      At line 89 in file main.s
Comment: NVIC_CPAC_R used once
1 symbol
353 symbols in table
